import { NextRequest, NextResponse } from 'next/server'

export async function GET(
  request: NextRequest,
  { params }: { params: { id: string } }
) {
  try {
    const artifactId = params.id

    if (!artifactId) {
      return NextResponse.json({ error: 'Artifact ID is required' }, { status: 400 })
    }

    // For now, we'll return a placeholder response
    // In a real implementation, you would:
    // 1. Retrieve the artifact data from a database
    // 2. Generate the actual document file (.odt, .docx, etc.)
    // 3. Return the file as a download

    const mockDocument = {
      id: artifactId,
      title: 'Generated Document',
      content: 'This is a placeholder for the actual document content.',
      type: 'text/plain'
    }

    // Create a simple text file for download
    const content = `Generated Document - ${artifactId}

This is a placeholder document generated by the AI system.

To implement full document generation, you would:
1. Store artifact data in a database
2. Use libraries like python-docx for .docx files
3. Use odfpy or similar for .odt files
4. Generate the actual document with proper formatting
5. Return the binary file data

Generated at: ${new Date().toISOString()}
Artifact ID: ${artifactId}`

    const headers = new Headers()
    headers.set('Content-Type', 'text/plain')
    headers.set('Content-Disposition', `attachment; filename="document_${artifactId}.txt"`)

    return new NextResponse(content, {
      status: 200,
      headers
    })

  } catch (error) {
    console.error('Download error:', error)
    return NextResponse.json(
      { error: 'Failed to download artifact', details: error instanceof Error ? error.message : 'Unknown error' },
      { status: 500 }
    )
  }
}
